{"version":3,"sources":["App.js","reportWebVitals.js","components/counter/counter.jsx","components/question/question.jsx","components/answers/multiButton/multiButton.jsx","components/answers/answers.jsx","components/quiz.jsx","components/home.jsx","components/score.jsx","index.js"],"names":["App","children","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Counter","props","count","length","Question","this","question","Component","Multibutton","useState","active","setActive","onClick","changePoints","data","correct","answer","Answers","userPoints","setUserPoints","setNeedPoints","point","checkPoints","changeNeedPoints","updateData","answers","forEach","ans","map","index","Quiz","Questions","questions","current","setCurrent","score","setScore","showScore","setShowScore","to","pathname","state","theTrue","Home","Score","location","ReactDOM","render","StrictMode","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.2ee17bec.chunk.js","sourcesContent":["import './App.css';\r\n\r\nimport React from 'react';\r\n\r\n\r\nfunction App({children}) {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport \"./counter.css\"\r\n\r\nconst Counter = (props) => {\r\n\r\n    return (\r\n        <div className=\"quiz__counter\">\r\n            Вопрос {props.count} / {props.length}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Counter;\r\n","import React, {Component} from 'react';\r\nimport \"./question.css\"\r\n\r\nclass Question extends Component {\r\n    render() {\r\n        return (\r\n            <h1 className=\"quiz__question\" >\r\n                {this.props.question}\r\n            </h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;\r\n","import React, {useState} from 'react';\r\n\r\nconst Multibutton = (props) => {\r\n    const [active, setActive] = useState(false);\r\n    return (\r\n\r\n        <button className={!active ? \"button\" : \"button quiz__answers-button_active\"}\r\n            onClick={() => {\r\n                setActive(active ? false : true)\r\n                props.changePoints(props.data.correct\r\n                    ? active\r\n                        ? -1 : 1\r\n                    : active\r\n                        ? 1 : -1)\r\n\r\n            }}\r\n        > {props.data.answer}</button >\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Multibutton;\r\n","import React, {useState} from 'react';\r\nimport \"./answers.css\"\r\nimport Multibutton from './multiButton/multiButton';\r\n\r\nconst Answers = (props) => {\r\n    const [userPoints, setUserPoints] = useState(0);\r\n    const [needPoints, setNeedPoints] = useState(0);\r\n\r\n    const changeNeedPoints = (count) => {\r\n        setNeedPoints(count)\r\n    }\r\n\r\n    const changePoints = (point) => {\r\n        setUserPoints(userPoints + point)\r\n    }\r\n\r\n    const checkPoints = (count) => {\r\n        changeNeedPoints(count)\r\n        if (count - userPoints === 0)\r\n            props.updateData(true)\r\n        else props.updateData(false)\r\n    }\r\n\r\n\r\n    let count = 0\r\n    props.answers.forEach((ans) => {\r\n        if (ans.correct) count++;\r\n    });\r\n    if (count <= 1)\r\n        return (\r\n            <div className=\"quiz__answers-wrapper\">\r\n                {props.answers.map((ans, index) =>\r\n                    <div key={index}>\r\n                        <button className=\"button\"\r\n                            onClick={() => {\r\n                                props.updateData(ans.correct)\r\n                            }}\r\n                        >{ans.answer}</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div className=\"quiz__answers-wrapper\">\r\n                {props.answers.map((ans, index) =>\r\n                    <Multibutton data={ans} key={index} changePoints={changePoints} />\r\n                )}\r\n                <button onClick={() => {\r\n                    checkPoints(count)\r\n\r\n                }} className=\"button quiz__answers-button_submit\">Отправить</button>\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default Answers;\r\n","import React, {useState} from 'react';\r\nimport \"./quiz.css\";\r\nimport Counter from './counter/counter';\r\nimport Question from './question/question';\r\nimport Answers from './answers/answers';\r\nimport {\r\n    Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport Questions from '../json/q.json'; // question bank \r\n\r\nconst Quiz = () => { //сколько вариантов ответа\r\n    const [questions] = useState(Questions)\r\n    const [current, setCurrent] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n\r\n    const updateData = (theTrue) => {\r\n        if (theTrue)\r\n        {\r\n            setScore(score + 1)\r\n        }\r\n        if (current + 1 < questions.length)\r\n        {\r\n            setCurrent(current + 1)\r\n        } else\r\n        {\r\n            setShowScore(true)\r\n        }\r\n    };\r\n\r\n    return (\r\n        // <Score score={score} count={questions.length} />\r\n        <div className=\"quiz\">\r\n            {showScore\r\n                ? <Redirect to={{\r\n                    pathname: '/score',\r\n                    state: {\r\n                        score: score,\r\n                        count: questions.length,\r\n                    }\r\n                }} />\r\n                : <div className=\"quiz__pull\">\r\n                    <div className=\"quiz__text\">\r\n                        <Counter count={current + 1} length={questions.length} />\r\n                        <div className=\"wrapper\">\r\n                            <Question question={questions[current].question} />\r\n                            <div className=\"quiz__desc\">Выберете один правильный вариант ответа</div>\r\n                        </div>\r\n                    </div>\r\n                    <Answers updateData={updateData} answers={questions[current].answers} />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport \"./quiz.css\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <Link to={`/quiz`} className='home'>\r\n                <button className=\"button button_black button_center\">Начать тест</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Score = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"quiz__score\">\r\n                <div>Правильных ответов {props.location.state.score} из {props.location.state.count}</div>\r\n                <Link to='/'>\r\n                    <button className='button button_black button_mt50'>Пройти заново</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n// this.resetQuiz()\r\nexport default Score;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport Quiz from './components/quiz';\r\nimport Home from './components/home';\r\nimport Score from './components/score';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<BrowserRouter>\r\n\t\t\t<App>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path='/' component={Home} />\r\n\t\t\t\t\t<Route path='/quiz' component={Quiz} />\r\n\t\t\t\t\t<Route path='/score' component={Score} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</App>\r\n\t\t</BrowserRouter>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}