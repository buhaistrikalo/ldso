{"version":3,"sources":["components/counter/counter.jsx","components/question/question.jsx","components/answers/multiButton/multiButton.jsx","components/answers/answers.jsx","components/quiz.jsx","App.js","reportWebVitals.js","index.js"],"names":["Counter","className","this","props","count","length","Component","Question","question","Multibutton","state","active","onClick","setState","changePoints","data","correct","answer","Answers","needPoints","userPoints","point","changeNeedPoints","updateData","answers","forEach","ans","map","index","checkPoints","Quiz","questions","Questions","current","score","showScore","theTrue","resetQuiz","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98c77fca.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport \"./counter.css\"\r\n\r\nclass Counter extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"quiz__counter\">\r\n                Вопрос {this.props.count} / {this.props.length}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;\r\n","import React, {Component} from 'react';\r\nimport \"./question.css\"\r\n\r\nclass Question extends Component {\r\n    render() {\r\n        return (\r\n            <h1 className=\"quiz__question\" >\r\n                {this.props.question}\r\n            </h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;\r\n","import React, {Component} from 'react';\r\n\r\nclass Multibutton extends Component {\r\n    state = {\r\n        active: false\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <button className={!this.state.active ? \"button\" : \"button quiz__answers-button_active\"}\r\n                onClick={() => {\r\n                    this.setState({active: this.state.active ? false : true})\r\n                    this.props.changePoints(this.props.data.correct\r\n                        ? this.state.active\r\n                            ? -1 : 1\r\n                        : this.state.active\r\n                            ? 1 : -1)\r\n\r\n                }}\r\n            >{this.props.data.answer}</button>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Multibutton;\r\n","import React, {Component} from 'react';\r\nimport \"./answers.css\"\r\nimport Multibutton from './multiButton/multiButton';\r\n\r\nclass Answers extends Component {\r\n    state = {\r\n        needPoints: 0,\r\n        userPoints: 0,\r\n    }\r\n\r\n    changeNeedPoints(count) {\r\n        this.setState({needPoints: count});\r\n    }\r\n\r\n    changePoints = (point) => {\r\n        this.setState({userPoints: this.state.userPoints + point})\r\n    }\r\n\r\n    checkPoints(count) {\r\n        this.changeNeedPoints(count)\r\n        if (count - this.state.userPoints === 0)\r\n            this.props.updateData(true)\r\n        else this.props.updateData(false)\r\n    }\r\n\r\n    render() {\r\n        let count = 0\r\n        this.props.answers.forEach((ans) => {\r\n            if (ans.correct) count++;\r\n        });\r\n\r\n\r\n        if (count <= 1)\r\n            return (\r\n                <div className=\"quiz__answers-wrapper\">\r\n                    {this.props.answers.map((ans, index) =>\r\n                        <div key={index}>\r\n                            <button className=\"button\"\r\n                                onClick={() => {\r\n                                    this.props.updateData(ans.correct)\r\n                                }}\r\n                            >{ans.answer}</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            );\r\n        else\r\n            return (\r\n                <div className=\"quiz__answers-wrapper\">\r\n                    {this.props.answers.map((ans, index) =>\r\n                        <Multibutton data={ans} key={index} changePoints={this.changePoints} />\r\n                    )}\r\n                    <button onClick={() => {this.checkPoints(count)}} className=\"button quiz__answers-button_submit\">Отправить</button>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Answers;\r\n","import {React, Component} from 'react';\r\nimport \"./quiz.css\";\r\nimport Counter from './counter/counter';\r\nimport Question from './question/question';\r\nimport Answers from './answers/answers';\r\n\r\n\r\nimport Questions from '../json/q.json'; // question bank\r\n\r\nclass Quiz extends Component { //сколько вариантов ответа\r\n    state = {\r\n        questions: Questions,\r\n        current: 0,\r\n        score: 0,\r\n        showScore: false,\r\n    }\r\n\r\n    updateData = (theTrue) => {\r\n        if (theTrue)\r\n        {\r\n            this.setState({score: this.state.score + 1})\r\n        }\r\n        if (this.state.current + 1 < this.state.questions.length)\r\n        {\r\n            this.setState({current: this.state.current + 1})\r\n        } else\r\n        {\r\n            this.setState({showScore: true})\r\n        }\r\n    }\r\n\r\n    resetQuiz() {\r\n        this.setState({current: 0})\r\n        this.setState({score: 0})\r\n        this.setState({showScore: false})\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"quiz\">\r\n                {this.state.showScore\r\n                    ? <div className=\"quiz__score\">\r\n                        <div>Правильных ответов {this.state.score} из {this.state.questions.length}</div>\r\n                        <button className='button quiz__score-button'\r\n                            onClick={() => {this.resetQuiz()}}\r\n                        >Пройти заново</button>\r\n                    </div>\r\n                    : <div className=\"quiz__pull\">\r\n                        <div className=\"quiz__text\">\r\n                            <Counter count={this.state.current + 1} length={this.state.questions.length} />\r\n                            <div className=\"wrapper\">\r\n                                <Question question={this.state.questions[this.state.current].question} />\r\n                                <div className=\"quiz__desc\">Выберете один правильный вариант ответа</div>\r\n                            </div>\r\n                        </div>\r\n                        <Answers updateData={this.updateData} answers={this.state.questions[this.state.current].answers} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// function getFile(path) {\r\n//     let file = JSON.parse(fs.readFileSync('./json/q.json'))\r\n\r\n// }\r\n\r\n\r\nexport default Quiz;\r\n","import './App.css';\nimport Quiz from './components/quiz';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Quiz />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}